pipeline {

   agent any

   parameters {


    string(name: 'DOCKERHUB_URL', defaultValue: 'navabnaeem', description: 'Please Enter your Docker docker REGISTRY URL')
    string(name: 'DOCKERHUB_REPO', defaultValue: 'edexa', description: 'Please Enter your Docker App Repo Name?')
    string(name: 'IMAGE_TAG', defaultValue: 'statefulset', description: 'Please Enter your image tag')

   }

   stages {

        stage('clone') {
            steps {
               sh 'rm -rf *'
               git branch: 'main', url: 'https://github.com/NavabShariff/edexa.git'

            }
        }
        stage('pre-check') {
            when {
              anyOf {
              changeset "B/**"
              }
            }
            steps{
              script {
                 env.BUILDME = "yes"
              }
            }
        }

        stage('Build and Push Docker Image') {

            when {environment name: 'BUILDME', value: 'yes'}


            steps {
                script {

                    dockerTag = params.DOCKERHUB_URL + "/" + params.DOCKERHUB_REPO + ":" + params.IMAGE_TAG

                    dir ("./B/node-hello") {

                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-edexa') {


                        sh   "docker build -t test:1 ."

                        sh   "docker tag test:1 ${dockerTag}"

                        sh   "docker push ${dockerTag}"



                        }
                    }
                }
            }
        }
        stage('Deployment') {
            steps {

            script {
               when {environment name: 'BUILDME', value: 'yes'}

                Image = params.DOCKERHUB_URL + "/" + params.DOCKERHUB_REPO + ":" + params.IMAGE_TAG

                dir("./B/k8s") {

                    withKubeConfig([credentialsId: 'my_kubeconfig']) {


                        sh    "sed -i 's;image:.*;image: ${DOCKERHUB_URL}/${DOCKERHUB_REPO}:${IMAGE_TAG};g' B/k8s/statefullset.yaml"

                        sh    "kubectl apply -f  B/k8s/statefullset.yaml"

                    }
                 }
            }
            }
        }

    } // stages
}
